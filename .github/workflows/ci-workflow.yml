name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:

jobs:
  unit_test:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Install make and clang
        run: |
          sudo apt update
          sudo apt install -y make clang

      - name: Run unit tests
        run: |
          cd tests/unit-tests
          mkdir build && cd build
          cmake ..
          make
          cd ..
          ./test_transaction_parser.py

  nano_build:
    name: Build nem application for NanoS, X and S+
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            model: nanos
          - SDK: "$NANOX_SDK"
            model: nanox
          - SDK: "$NANOSP_SDK"
            model: nanosp
          # add stax
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          make BOLOS_SDK=${{ matrix.SDK }}
          mv bin/app.elf "bin/nem_${{ matrix.model }}.elf"

      - name: Upload app binary
        uses: actions/upload-artifact@v3
        with:
          name: apps
          path: bin/*.elf

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default

      - name: Upload scan result
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_functional_test:
    name: Functional tests with Ragger (compatible with Speculos & physical devices)
    needs:
      - nano_build
    strategy:
      matrix:
        include:
          - model: nanos
          - model: nanox
          - model: nanosp
          # add stax
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Download app binary
        uses: actions/download-artifact@v3
        with:
          name: apps
          path: tests/elfs

      - name: Install tests dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y qemu-user-static
          pip install --extra-index-url https://test.pypi.org/simple/ -r tests/functional/requirements.txt

      - name: Run tests
        run: pytest tests/functional/ -v --device ${{ matrix.model }}
